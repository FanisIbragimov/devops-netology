---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front
  namespace: fanis
  labels:
    name: front
spec:
  replicas: 1
  selector:
    matchLabels:
      name: front
  template:
    metadata:
      labels:
        name: front
    spec:
      containers:
      - name: front
        image: praqma/network-multitool:alpine-extra
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8010
        env:
        - name: URL
          value: http://localhost:9010
        volumeMounts:
        - name: pv
          mountPath: /data/pv/
      volumes:
      - name: pv
        persistentVolumeClaim:
          claimName: pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back
  namespace: fanis
  labels:
    name: back
spec:
  replicas: 1
  selector:
    matchLabels:
      name: back
  template:
    metadata:
      labels:
        name: back
    spec:
      containers:
      - name: back
        image: praqma/network-multitool:alpine-extra
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9010
        env:
        - name: DB_URL
          value: postgres://postgres:postgres@db:5432/news
        volumeMounts:
        - name: pv
          mountPath: /data/pv/
      volumes:
      - name: pv
        persistentVolumeClaim:
          claimName: pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: fanis
  labels:
    name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: db
  template:
    metadata:
      labels:
        name: db
    spec:
      containers:
      - name: db
        image: praqma/network-multitool:alpine-extra
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: pv
          mountPath: /data/pv/
      volumes:
      - name: pv
        persistentVolumeClaim:
          claimName: pvc
---
apiVersion: v1
kind: Service
metadata:
  name: back-service
  namespace: fanis
  labels:
    name: back-service
spec:
  ports:
  - port: 9010
  selector:
    name: back
  type: ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: db-service
  namespace: fanis
  labels:
    name: db-service
spec:
  ports:
  - port: 5432
  selector:
    name: db
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: front-service
  namespace: fanis
  labels:
    name: front-service
spec:
  ports:
  - port: 8010
  selector:
    name: front
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-hosts
  namespace: fanis

spec:
  rules:
  - host: fanis.ru
    http:
      paths:
       - path: /
         pathType: Prefix
         backend:
           service: 
              name: front
              port:
                number: 8010
